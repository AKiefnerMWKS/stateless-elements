// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HttpOperation Header Parameters should render correct validations 1`] = `
<HttpOperation
  data={
    Object {
      "id": "get",
      "method": "get",
      "path": "/path",
      "request": Object {
        "headers": Array [
          Object {
            "deprecated": true,
            "description": "a parameter description",
            "examples": Array [
              Object {
                "key": "example",
                "value": "example value",
              },
            ],
            "explode": true,
            "name": "parameter name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
            "style": "simple",
          },
        ],
      },
      "responses": Array [],
    }
  }
>
  <HttpOperation.Component
    data={
      Object {
        "id": "get",
        "method": "get",
        "path": "/path",
        "request": Object {
          "headers": Array [
            Object {
              "deprecated": true,
              "description": "a parameter description",
              "examples": Array [
                Object {
                  "key": "example",
                  "value": "example value",
                },
              ],
              "explode": true,
              "name": "parameter name",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "simple",
            },
          ],
        },
        "responses": Array [],
      }
    }
  >
    <div
      className="HttpOperation"
    >
      <h2
        className="bp3-heading flex items-center mb-10"
      >
        <div
          className="uppercase mr-4 font-semibold text-success dark:text-success"
        >
          get
        </div>
        <div
          className="flex-1"
        >
          /path
        </div>
      </h2>
      <HttpOperation.Request
        request={
          Object {
            "headers": Array [
              Object {
                "deprecated": true,
                "description": "a parameter description",
                "examples": Array [
                  Object {
                    "key": "example",
                    "value": "example value",
                  },
                ],
                "explode": true,
                "name": "parameter name",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "simple",
              },
            ],
          }
        }
      >
        <div
          className="HttpOperation__Request"
        >
          <HttpSecuritySchemes
            className="mb-10"
            securities={Array []}
            title="Authorization"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Path Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Query Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Cookie Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            parameters={
              Array [
                Object {
                  "deprecated": true,
                  "description": "a parameter description",
                  "examples": Array [
                    Object {
                      "key": "example",
                      "value": "example value",
                    },
                  ],
                  "explode": true,
                  "name": "parameter name",
                  "required": true,
                  "schema": Object {
                    "type": "string",
                  },
                  "style": "simple",
                },
              ]
            }
            title="Header Parameters"
          >
            <div
              className="HttpOperation__Parameters mb-10"
            >
              <Component
                title="Header Parameters"
              >
                <h3
                  className="bp3-heading font-normal"
                >
                  Header Parameters
                </h3>
              </Component>
              <div
                className="mt-6 border rounded TreeList dark:border-darken"
              >
                <HttpOperation.Parameter
                  className="TreeListItem"
                  key="parameter name"
                  parameter={
                    Object {
                      "deprecated": true,
                      "description": "a parameter description",
                      "examples": Array [
                        Object {
                          "key": "example",
                          "value": "example value",
                        },
                      ],
                      "explode": true,
                      "name": "parameter name",
                      "required": true,
                      "schema": Object {
                        "type": "string",
                      },
                      "style": "simple",
                    }
                  }
                >
                  <div
                    className="HttpOperation__Parameter px-4 py-3 flex items-start TreeListItem"
                    style={
                      Object {
                        "alignItems": "start",
                      }
                    }
                  >
                    <div
                      className="flex flex-1 flex-start items-center"
                    >
                      <div
                        style={
                          Object {
                            "minWidth": "100px",
                          }
                        }
                      >
                        parameter name
                      </div>
                      <div
                        className="undefined mx-4"
                      >
                        string
                      </div>
                      <div
                        className="flex-1 ml-4"
                      >
                        <MarkdownViewer
                          className="flex-1 text-darken-7 dark:text-lighten-6"
                          markdown="a parameter description"
                        >
                          <MarkdownViewer
                            className="flex-1 text-darken-7 dark:text-lighten-6"
                            components={
                              Object {
                                "code": [Function],
                              }
                            }
                            markdown="a parameter description"
                          >
                            <ErrorBoundary
                              FallbackComponent={[Function]}
                            >
                              <MarkdownViewer.Component
                                className="flex-1 text-darken-7 dark:text-lighten-6"
                                components={
                                  Object {
                                    "code": [Function],
                                  }
                                }
                                markdown="a parameter description"
                              >
                                <div
                                  className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                >
                                  <paragraph
                                    index={0}
                                    key="0"
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "position": Position {
                                              "end": Object {
                                                "column": 24,
                                                "line": 1,
                                                "offset": 23,
                                              },
                                              "indent": Array [],
                                              "start": Object {
                                                "column": 1,
                                                "line": 1,
                                                "offset": 0,
                                              },
                                            },
                                            "type": "text",
                                            "value": "a parameter description",
                                          },
                                        ],
                                        "position": Position {
                                          "end": Object {
                                            "column": 24,
                                            "line": 1,
                                            "offset": 23,
                                          },
                                          "indent": Array [],
                                          "start": Object {
                                            "column": 1,
                                            "line": 1,
                                            "offset": 0,
                                          },
                                        },
                                        "type": "paragraph",
                                      }
                                    }
                                    parent={
                                      Object {
                                        "type": "root",
                                      }
                                    }
                                    path={
                                      Array [
                                        "children",
                                        0,
                                      ]
                                    }
                                  >
                                    <p>
                                      <N
                                        index={0}
                                        key="0"
                                        node={
                                          Object {
                                            "position": Position {
                                              "end": Object {
                                                "column": 24,
                                                "line": 1,
                                                "offset": 23,
                                              },
                                              "indent": Array [],
                                              "start": Object {
                                                "column": 1,
                                                "line": 1,
                                                "offset": 0,
                                              },
                                            },
                                            "type": "text",
                                            "value": "a parameter description",
                                          }
                                        }
                                        parent={
                                          Object {
                                            "parent": Object {
                                              "type": "root",
                                            },
                                            "type": "paragraph",
                                          }
                                        }
                                        path={
                                          Array [
                                            "children",
                                            0,
                                            "children",
                                            0,
                                          ]
                                        }
                                      >
                                        a parameter description
                                      </N>
                                    </p>
                                  </paragraph>
                                </div>
                              </MarkdownViewer.Component>
                            </ErrorBoundary>
                          </MarkdownViewer>
                        </MarkdownViewer>
                        <div
                          className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                        >
                          <div
                            className="mt-2 mr-2"
                          >
                            <Blueprint3.Tag
                              intent="warning"
                              minimal={true}
                            >
                              <span
                                className="bp3-tag bp3-intent-warning bp3-minimal"
                              >
                                <Blueprint3.Icon />
                                <Blueprint3.Text
                                  className="bp3-fill"
                                  ellipsize={true}
                                  tagName="span"
                                >
                                  <span
                                    className="bp3-text-overflow-ellipsis bp3-fill"
                                  >
                                    Deprecated
                                  </span>
                                </Blueprint3.Text>
                                <Blueprint3.Icon />
                              </span>
                            </Blueprint3.Tag>
                          </div>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="explode"
                            name="explode"
                            value={true}
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      explode
                                      : 
                                      true
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="examples"
                            name="examples"
                            value={
                              Array [
                                Object {
                                  "key": "example",
                                  "value": "example value",
                                },
                              ]
                            }
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      examples
                                      : 
                                      {"key":"example","value":"example value"}
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                        </div>
                      </div>
                    </div>
                    <div
                      className="ml-4 text-right"
                    >
                      <div
                        className="font-medium"
                      >
                        required
                      </div>
                    </div>
                  </div>
                </HttpOperation.Parameter>
              </div>
            </div>
          </HttpOperation.Parameters>
        </div>
      </HttpOperation.Request>
      <HttpOperation.Responses
        responses={Array []}
      />
    </div>
  </HttpOperation.Component>
</HttpOperation>
`;

exports[`HttpOperation Path Parameters should render correct validations 1`] = `
<HttpOperation
  data={
    Object {
      "id": "get",
      "method": "get",
      "path": "/path",
      "request": Object {
        "path": Array [
          Object {
            "deprecated": true,
            "description": "a parameter description",
            "examples": Array [
              Object {
                "key": "example",
                "value": "example value",
              },
            ],
            "explode": true,
            "name": "parameter name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
            "style": "simple",
          },
        ],
      },
      "responses": Array [],
    }
  }
>
  <HttpOperation.Component
    data={
      Object {
        "id": "get",
        "method": "get",
        "path": "/path",
        "request": Object {
          "path": Array [
            Object {
              "deprecated": true,
              "description": "a parameter description",
              "examples": Array [
                Object {
                  "key": "example",
                  "value": "example value",
                },
              ],
              "explode": true,
              "name": "parameter name",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "simple",
            },
          ],
        },
        "responses": Array [],
      }
    }
  >
    <div
      className="HttpOperation"
    >
      <h2
        className="bp3-heading flex items-center mb-10"
      >
        <div
          className="uppercase mr-4 font-semibold text-success dark:text-success"
        >
          get
        </div>
        <div
          className="flex-1"
        >
          /path
        </div>
      </h2>
      <HttpOperation.Request
        request={
          Object {
            "path": Array [
              Object {
                "deprecated": true,
                "description": "a parameter description",
                "examples": Array [
                  Object {
                    "key": "example",
                    "value": "example value",
                  },
                ],
                "explode": true,
                "name": "parameter name",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "simple",
              },
            ],
          }
        }
      >
        <div
          className="HttpOperation__Request"
        >
          <HttpSecuritySchemes
            className="mb-10"
            securities={Array []}
            title="Authorization"
          />
          <HttpOperation.Parameters
            className="mb-10"
            parameters={
              Array [
                Object {
                  "deprecated": true,
                  "description": "a parameter description",
                  "examples": Array [
                    Object {
                      "key": "example",
                      "value": "example value",
                    },
                  ],
                  "explode": true,
                  "name": "parameter name",
                  "required": true,
                  "schema": Object {
                    "type": "string",
                  },
                  "style": "simple",
                },
              ]
            }
            title="Path Parameters"
          >
            <div
              className="HttpOperation__Parameters mb-10"
            >
              <Component
                title="Path Parameters"
              >
                <h3
                  className="bp3-heading font-normal"
                >
                  Path Parameters
                </h3>
              </Component>
              <div
                className="mt-6 border rounded TreeList dark:border-darken"
              >
                <HttpOperation.Parameter
                  className="TreeListItem"
                  key="parameter name"
                  parameter={
                    Object {
                      "deprecated": true,
                      "description": "a parameter description",
                      "examples": Array [
                        Object {
                          "key": "example",
                          "value": "example value",
                        },
                      ],
                      "explode": true,
                      "name": "parameter name",
                      "required": true,
                      "schema": Object {
                        "type": "string",
                      },
                      "style": "simple",
                    }
                  }
                >
                  <div
                    className="HttpOperation__Parameter px-4 py-3 flex items-start TreeListItem"
                    style={
                      Object {
                        "alignItems": "start",
                      }
                    }
                  >
                    <div
                      className="flex flex-1 flex-start items-center"
                    >
                      <div
                        style={
                          Object {
                            "minWidth": "100px",
                          }
                        }
                      >
                        parameter name
                      </div>
                      <div
                        className="undefined mx-4"
                      >
                        string
                      </div>
                      <div
                        className="flex-1 ml-4"
                      >
                        <MarkdownViewer
                          className="flex-1 text-darken-7 dark:text-lighten-6"
                          markdown="a parameter description"
                        >
                          <MarkdownViewer
                            className="flex-1 text-darken-7 dark:text-lighten-6"
                            components={
                              Object {
                                "code": [Function],
                              }
                            }
                            markdown="a parameter description"
                          >
                            <ErrorBoundary
                              FallbackComponent={[Function]}
                            >
                              <MarkdownViewer.Component
                                className="flex-1 text-darken-7 dark:text-lighten-6"
                                components={
                                  Object {
                                    "code": [Function],
                                  }
                                }
                                markdown="a parameter description"
                              >
                                <div
                                  className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                >
                                  <paragraph
                                    index={0}
                                    key="0"
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "position": Position {
                                              "end": Object {
                                                "column": 24,
                                                "line": 1,
                                                "offset": 23,
                                              },
                                              "indent": Array [],
                                              "start": Object {
                                                "column": 1,
                                                "line": 1,
                                                "offset": 0,
                                              },
                                            },
                                            "type": "text",
                                            "value": "a parameter description",
                                          },
                                        ],
                                        "position": Position {
                                          "end": Object {
                                            "column": 24,
                                            "line": 1,
                                            "offset": 23,
                                          },
                                          "indent": Array [],
                                          "start": Object {
                                            "column": 1,
                                            "line": 1,
                                            "offset": 0,
                                          },
                                        },
                                        "type": "paragraph",
                                      }
                                    }
                                    parent={
                                      Object {
                                        "type": "root",
                                      }
                                    }
                                    path={
                                      Array [
                                        "children",
                                        0,
                                      ]
                                    }
                                  >
                                    <p>
                                      <N
                                        index={0}
                                        key="0"
                                        node={
                                          Object {
                                            "position": Position {
                                              "end": Object {
                                                "column": 24,
                                                "line": 1,
                                                "offset": 23,
                                              },
                                              "indent": Array [],
                                              "start": Object {
                                                "column": 1,
                                                "line": 1,
                                                "offset": 0,
                                              },
                                            },
                                            "type": "text",
                                            "value": "a parameter description",
                                          }
                                        }
                                        parent={
                                          Object {
                                            "parent": Object {
                                              "type": "root",
                                            },
                                            "type": "paragraph",
                                          }
                                        }
                                        path={
                                          Array [
                                            "children",
                                            0,
                                            "children",
                                            0,
                                          ]
                                        }
                                      >
                                        a parameter description
                                      </N>
                                    </p>
                                  </paragraph>
                                </div>
                              </MarkdownViewer.Component>
                            </ErrorBoundary>
                          </MarkdownViewer>
                        </MarkdownViewer>
                        <div
                          className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                        >
                          <div
                            className="mt-2 mr-2"
                          >
                            <Blueprint3.Tag
                              intent="warning"
                              minimal={true}
                            >
                              <span
                                className="bp3-tag bp3-intent-warning bp3-minimal"
                              >
                                <Blueprint3.Icon />
                                <Blueprint3.Text
                                  className="bp3-fill"
                                  ellipsize={true}
                                  tagName="span"
                                >
                                  <span
                                    className="bp3-text-overflow-ellipsis bp3-fill"
                                  >
                                    Deprecated
                                  </span>
                                </Blueprint3.Text>
                                <Blueprint3.Icon />
                              </span>
                            </Blueprint3.Tag>
                          </div>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="explode"
                            name="explode"
                            value={true}
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      explode
                                      : 
                                      true
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="examples"
                            name="examples"
                            value={
                              Array [
                                Object {
                                  "key": "example",
                                  "value": "example value",
                                },
                              ]
                            }
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      examples
                                      : 
                                      {"key":"example","value":"example value"}
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                        </div>
                      </div>
                    </div>
                    <div
                      className="ml-4 text-right"
                    >
                      <div
                        className="font-medium"
                      >
                        required
                      </div>
                    </div>
                  </div>
                </HttpOperation.Parameter>
              </div>
            </div>
          </HttpOperation.Parameters>
          <HttpOperation.Parameters
            className="mb-10"
            title="Query Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Cookie Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Header Parameters"
          />
        </div>
      </HttpOperation.Request>
      <HttpOperation.Responses
        responses={Array []}
      />
    </div>
  </HttpOperation.Component>
</HttpOperation>
`;

exports[`HttpOperation Query Parameters should render correct validations 1`] = `
<HttpOperation
  data={
    Object {
      "id": "get",
      "method": "get",
      "path": "/path",
      "request": Object {
        "query": Array [
          Object {
            "allowEmptyValue": true,
            "allowReserved": true,
            "deprecated": true,
            "description": "a parameter description",
            "examples": Array [
              Object {
                "key": "example",
                "value": "example value",
              },
            ],
            "explode": true,
            "name": "parameter name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
            "style": "form",
          },
        ],
      },
      "responses": Array [],
    }
  }
>
  <HttpOperation.Component
    data={
      Object {
        "id": "get",
        "method": "get",
        "path": "/path",
        "request": Object {
          "query": Array [
            Object {
              "allowEmptyValue": true,
              "allowReserved": true,
              "deprecated": true,
              "description": "a parameter description",
              "examples": Array [
                Object {
                  "key": "example",
                  "value": "example value",
                },
              ],
              "explode": true,
              "name": "parameter name",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "form",
            },
          ],
        },
        "responses": Array [],
      }
    }
  >
    <div
      className="HttpOperation"
    >
      <h2
        className="bp3-heading flex items-center mb-10"
      >
        <div
          className="uppercase mr-4 font-semibold text-success dark:text-success"
        >
          get
        </div>
        <div
          className="flex-1"
        >
          /path
        </div>
      </h2>
      <HttpOperation.Request
        request={
          Object {
            "query": Array [
              Object {
                "allowEmptyValue": true,
                "allowReserved": true,
                "deprecated": true,
                "description": "a parameter description",
                "examples": Array [
                  Object {
                    "key": "example",
                    "value": "example value",
                  },
                ],
                "explode": true,
                "name": "parameter name",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "form",
              },
            ],
          }
        }
      >
        <div
          className="HttpOperation__Request"
        >
          <HttpSecuritySchemes
            className="mb-10"
            securities={Array []}
            title="Authorization"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Path Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            parameters={
              Array [
                Object {
                  "allowEmptyValue": true,
                  "allowReserved": true,
                  "deprecated": true,
                  "description": "a parameter description",
                  "examples": Array [
                    Object {
                      "key": "example",
                      "value": "example value",
                    },
                  ],
                  "explode": true,
                  "name": "parameter name",
                  "required": true,
                  "schema": Object {
                    "type": "string",
                  },
                  "style": "form",
                },
              ]
            }
            title="Query Parameters"
          >
            <div
              className="HttpOperation__Parameters mb-10"
            >
              <Component
                title="Query Parameters"
              >
                <h3
                  className="bp3-heading font-normal"
                >
                  Query Parameters
                </h3>
              </Component>
              <div
                className="mt-6 border rounded TreeList dark:border-darken"
              >
                <HttpOperation.Parameter
                  className="TreeListItem"
                  key="parameter name"
                  parameter={
                    Object {
                      "allowEmptyValue": true,
                      "allowReserved": true,
                      "deprecated": true,
                      "description": "a parameter description",
                      "examples": Array [
                        Object {
                          "key": "example",
                          "value": "example value",
                        },
                      ],
                      "explode": true,
                      "name": "parameter name",
                      "required": true,
                      "schema": Object {
                        "type": "string",
                      },
                      "style": "form",
                    }
                  }
                >
                  <div
                    className="HttpOperation__Parameter px-4 py-3 flex items-start TreeListItem"
                    style={
                      Object {
                        "alignItems": "start",
                      }
                    }
                  >
                    <div
                      className="flex flex-1 flex-start items-center"
                    >
                      <div
                        style={
                          Object {
                            "minWidth": "100px",
                          }
                        }
                      >
                        parameter name
                      </div>
                      <div
                        className="undefined mx-4"
                      >
                        string
                      </div>
                      <div
                        className="flex-1 ml-4"
                      >
                        <MarkdownViewer
                          className="flex-1 text-darken-7 dark:text-lighten-6"
                          markdown="a parameter description"
                        >
                          <MarkdownViewer
                            className="flex-1 text-darken-7 dark:text-lighten-6"
                            components={
                              Object {
                                "code": [Function],
                              }
                            }
                            markdown="a parameter description"
                          >
                            <ErrorBoundary
                              FallbackComponent={[Function]}
                            >
                              <MarkdownViewer.Component
                                className="flex-1 text-darken-7 dark:text-lighten-6"
                                components={
                                  Object {
                                    "code": [Function],
                                  }
                                }
                                markdown="a parameter description"
                              >
                                <div
                                  className="MarkdownViewer flex-1 text-darken-7 dark:text-lighten-6"
                                >
                                  <paragraph
                                    index={0}
                                    key="0"
                                    node={
                                      Object {
                                        "children": Array [
                                          Object {
                                            "position": Position {
                                              "end": Object {
                                                "column": 24,
                                                "line": 1,
                                                "offset": 23,
                                              },
                                              "indent": Array [],
                                              "start": Object {
                                                "column": 1,
                                                "line": 1,
                                                "offset": 0,
                                              },
                                            },
                                            "type": "text",
                                            "value": "a parameter description",
                                          },
                                        ],
                                        "position": Position {
                                          "end": Object {
                                            "column": 24,
                                            "line": 1,
                                            "offset": 23,
                                          },
                                          "indent": Array [],
                                          "start": Object {
                                            "column": 1,
                                            "line": 1,
                                            "offset": 0,
                                          },
                                        },
                                        "type": "paragraph",
                                      }
                                    }
                                    parent={
                                      Object {
                                        "type": "root",
                                      }
                                    }
                                    path={
                                      Array [
                                        "children",
                                        0,
                                      ]
                                    }
                                  >
                                    <p>
                                      <N
                                        index={0}
                                        key="0"
                                        node={
                                          Object {
                                            "position": Position {
                                              "end": Object {
                                                "column": 24,
                                                "line": 1,
                                                "offset": 23,
                                              },
                                              "indent": Array [],
                                              "start": Object {
                                                "column": 1,
                                                "line": 1,
                                                "offset": 0,
                                              },
                                            },
                                            "type": "text",
                                            "value": "a parameter description",
                                          }
                                        }
                                        parent={
                                          Object {
                                            "parent": Object {
                                              "type": "root",
                                            },
                                            "type": "paragraph",
                                          }
                                        }
                                        path={
                                          Array [
                                            "children",
                                            0,
                                            "children",
                                            0,
                                          ]
                                        }
                                      >
                                        a parameter description
                                      </N>
                                    </p>
                                  </paragraph>
                                </div>
                              </MarkdownViewer.Component>
                            </ErrorBoundary>
                          </MarkdownViewer>
                        </MarkdownViewer>
                        <div
                          className="flex flex-wrap text-darken-7 dark:text-lighten-6"
                        >
                          <div
                            className="mt-2 mr-2"
                          >
                            <Blueprint3.Tag
                              intent="warning"
                              minimal={true}
                            >
                              <span
                                className="bp3-tag bp3-intent-warning bp3-minimal"
                              >
                                <Blueprint3.Icon />
                                <Blueprint3.Text
                                  className="bp3-fill"
                                  ellipsize={true}
                                  tagName="span"
                                >
                                  <span
                                    className="bp3-text-overflow-ellipsis bp3-fill"
                                  >
                                    Deprecated
                                  </span>
                                </Blueprint3.Text>
                                <Blueprint3.Icon />
                              </span>
                            </Blueprint3.Tag>
                          </div>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="allowEmptyValue"
                            name="allowEmptyValue"
                            value={true}
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      allowEmptyValue
                                      : 
                                      true
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="allowReserved"
                            name="allowReserved"
                            value={true}
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      allowReserved
                                      : 
                                      true
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="explode"
                            name="explode"
                            value={true}
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      explode
                                      : 
                                      true
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                          <ParameterValidation
                            className="mt-2 mr-2"
                            key="examples"
                            name="examples"
                            value={
                              Array [
                                Object {
                                  "key": "example",
                                  "value": "example value",
                                },
                              ]
                            }
                          >
                            <div
                              className="mt-2 mr-2"
                            >
                              <Blueprint3.Tag
                                minimal={true}
                              >
                                <span
                                  className="bp3-tag bp3-minimal"
                                >
                                  <Blueprint3.Icon />
                                  <Blueprint3.Text
                                    className="bp3-fill"
                                    ellipsize={true}
                                    tagName="span"
                                  >
                                    <span
                                      className="bp3-text-overflow-ellipsis bp3-fill"
                                    >
                                      examples
                                      : 
                                      {"value":"example value","key":"example"}
                                    </span>
                                  </Blueprint3.Text>
                                  <Blueprint3.Icon />
                                </span>
                              </Blueprint3.Tag>
                            </div>
                          </ParameterValidation>
                        </div>
                      </div>
                    </div>
                    <div
                      className="ml-4 text-right"
                    >
                      <div
                        className="font-medium"
                      >
                        required
                      </div>
                    </div>
                  </div>
                </HttpOperation.Parameter>
              </div>
            </div>
          </HttpOperation.Parameters>
          <HttpOperation.Parameters
            className="mb-10"
            title="Cookie Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Header Parameters"
          />
        </div>
      </HttpOperation.Request>
      <HttpOperation.Responses
        responses={Array []}
      />
    </div>
  </HttpOperation.Component>
</HttpOperation>
`;
