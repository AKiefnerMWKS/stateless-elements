// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HttpOperation Header Parameters should render correct validations 1`] = `
<HttpOperation
  data={
    Object {
      "id": "get",
      "method": "get",
      "path": "/path",
      "request": Object {
        "headers": Array [
          Object {
            "deprecated": true,
            "description": "a parameter description",
            "examples": Array [
              Object {
                "key": "example",
                "value": "example value",
              },
            ],
            "explode": true,
            "name": "parameter name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
            "style": "simple",
          },
        ],
      },
      "responses": Array [],
    }
  }
>
  <HttpOperation.Component
    data={
      Object {
        "id": "get",
        "method": "get",
        "path": "/path",
        "request": Object {
          "headers": Array [
            Object {
              "deprecated": true,
              "description": "a parameter description",
              "examples": Array [
                Object {
                  "key": "example",
                  "value": "example value",
                },
              ],
              "explode": true,
              "name": "parameter name",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "simple",
            },
          ],
        },
        "responses": Array [],
      }
    }
  >
    <div
      className="HttpOperation"
    >
      <h2
        className="bp3-heading flex items-center mb-10"
      >
        <div
          className="uppercase mr-5 font-semibold border rounded py-1 px-2 text-success border-success"
        >
          get
        </div>
        <div
          className="flex-1 font-medium text-gray-6 dark:text-gray-3"
        >
          /path
        </div>
      </h2>
      <MarkdownViewer
        className="HttpOperation__Description mb-10 ml-1"
        markdown="*No description.*"
      >
        <MarkdownViewer
          className="HttpOperation__Description mb-10 ml-1"
          components={
            Object {
              "code": [Function],
            }
          }
          markdown="*No description.*"
        >
          <ErrorBoundary
            FallbackComponent={[Function]}
          >
            <MarkdownViewer.Component
              className="HttpOperation__Description mb-10 ml-1"
              components={
                Object {
                  "code": [Function],
                }
              }
              markdown="*No description.*"
            >
              <div
                className="MarkdownViewer HttpOperation__Description mb-10 ml-1"
              >
                <paragraph
                  index={0}
                  key="0"
                  node={
                    Object {
                      "children": Array [
                        Object {
                          "children": Array [
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            },
                          ],
                          "position": Position {
                            "end": Object {
                              "column": 18,
                              "line": 1,
                              "offset": 17,
                            },
                            "indent": Array [],
                            "start": Object {
                              "column": 1,
                              "line": 1,
                              "offset": 0,
                            },
                          },
                          "type": "emphasis",
                        },
                      ],
                      "position": Position {
                        "end": Object {
                          "column": 18,
                          "line": 1,
                          "offset": 17,
                        },
                        "indent": Array [],
                        "start": Object {
                          "column": 1,
                          "line": 1,
                          "offset": 0,
                        },
                      },
                      "type": "paragraph",
                    }
                  }
                  parent={
                    Object {
                      "type": "root",
                    }
                  }
                  path={
                    Array [
                      "children",
                      0,
                    ]
                  }
                >
                  <p>
                    <emphasis
                      index={0}
                      key="0"
                      node={
                        Object {
                          "children": Array [
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            },
                          ],
                          "position": Position {
                            "end": Object {
                              "column": 18,
                              "line": 1,
                              "offset": 17,
                            },
                            "indent": Array [],
                            "start": Object {
                              "column": 1,
                              "line": 1,
                              "offset": 0,
                            },
                          },
                          "type": "emphasis",
                        }
                      }
                      parent={
                        Object {
                          "parent": Object {
                            "type": "root",
                          },
                          "type": "paragraph",
                        }
                      }
                      path={
                        Array [
                          "children",
                          0,
                          "children",
                          0,
                        ]
                      }
                    >
                      <em>
                        <N
                          index={0}
                          key="0"
                          node={
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            }
                          }
                          parent={
                            Object {
                              "parent": Object {
                                "parent": Object {
                                  "type": "root",
                                },
                                "type": "paragraph",
                              },
                              "type": "emphasis",
                            }
                          }
                          path={
                            Array [
                              "children",
                              0,
                              "children",
                              0,
                              "children",
                              0,
                            ]
                          }
                        >
                          No description.
                        </N>
                      </em>
                    </emphasis>
                  </p>
                </paragraph>
              </div>
            </MarkdownViewer.Component>
          </ErrorBoundary>
        </MarkdownViewer>
      </MarkdownViewer>
      <HttpOperation.Request
        request={
          Object {
            "headers": Array [
              Object {
                "deprecated": true,
                "description": "a parameter description",
                "examples": Array [
                  Object {
                    "key": "example",
                    "value": "example value",
                  },
                ],
                "explode": true,
                "name": "parameter name",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "simple",
              },
            ],
          }
        }
      >
        <div
          className="HttpOperation__Request"
        >
          <HttpSecuritySchemes
            className="mb-10"
            securities={Array []}
            title="Authorization"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Path Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Query Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Cookie Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            parameters={
              Array [
                Object {
                  "deprecated": true,
                  "description": "a parameter description",
                  "examples": Array [
                    Object {
                      "key": "example",
                      "value": "example value",
                    },
                  ],
                  "explode": true,
                  "name": "parameter name",
                  "required": true,
                  "schema": Object {
                    "type": "string",
                  },
                  "style": "simple",
                },
              ]
            }
            title="Header Parameters"
          >
            <div
              className="HttpOperation__Parameters mb-10"
            >
              <Component
                title="Header Parameters"
              >
                <div
                  className="SectionTitle pl-1 pb-3 text-lg font-medium text-gray-7 dark:text-gray-4 border-b-2 dark:border-gray-6"
                >
                  Header Parameters
                </div>
              </Component>
              <HttpOperation.Parameter
                className="pt-4"
                key="parameter name"
                parameter={
                  Object {
                    "deprecated": true,
                    "description": "a parameter description",
                    "examples": Array [
                      Object {
                        "key": "example",
                        "value": "example value",
                      },
                    ],
                    "explode": true,
                    "name": "parameter name",
                    "required": true,
                    "schema": Object {
                      "type": "string",
                    },
                    "style": "simple",
                  }
                }
              >
                <div
                  className="HttpOperation__Parameter pl-1 pt-4"
                >
                  <div
                    className="flex items-center"
                  >
                    <div
                      className="font-medium font-mono"
                    >
                      parameter name
                    </div>
                    <div
                      className="ml-2 text-sm"
                    >
                      string
                    </div>
                    <div
                      className="ml-2 text-sm text-danger"
                    >
                      required
                    </div>
                  </div>
                  <MarkdownViewer
                    className="text-gray-7 dark:text-gray-4 mt-1"
                    markdown="a parameter description"
                  >
                    <MarkdownViewer
                      className="text-gray-7 dark:text-gray-4 mt-1"
                      components={
                        Object {
                          "code": [Function],
                        }
                      }
                      markdown="a parameter description"
                    >
                      <ErrorBoundary
                        FallbackComponent={[Function]}
                      >
                        <MarkdownViewer.Component
                          className="text-gray-7 dark:text-gray-4 mt-1"
                          components={
                            Object {
                              "code": [Function],
                            }
                          }
                          markdown="a parameter description"
                        >
                          <div
                            className="MarkdownViewer text-gray-7 dark:text-gray-4 mt-1"
                          >
                            <paragraph
                              index={0}
                              key="0"
                              node={
                                Object {
                                  "children": Array [
                                    Object {
                                      "position": Position {
                                        "end": Object {
                                          "column": 24,
                                          "line": 1,
                                          "offset": 23,
                                        },
                                        "indent": Array [],
                                        "start": Object {
                                          "column": 1,
                                          "line": 1,
                                          "offset": 0,
                                        },
                                      },
                                      "type": "text",
                                      "value": "a parameter description",
                                    },
                                  ],
                                  "position": Position {
                                    "end": Object {
                                      "column": 24,
                                      "line": 1,
                                      "offset": 23,
                                    },
                                    "indent": Array [],
                                    "start": Object {
                                      "column": 1,
                                      "line": 1,
                                      "offset": 0,
                                    },
                                  },
                                  "type": "paragraph",
                                }
                              }
                              parent={
                                Object {
                                  "type": "root",
                                }
                              }
                              path={
                                Array [
                                  "children",
                                  0,
                                ]
                              }
                            >
                              <p>
                                <N
                                  index={0}
                                  key="0"
                                  node={
                                    Object {
                                      "position": Position {
                                        "end": Object {
                                          "column": 24,
                                          "line": 1,
                                          "offset": 23,
                                        },
                                        "indent": Array [],
                                        "start": Object {
                                          "column": 1,
                                          "line": 1,
                                          "offset": 0,
                                        },
                                      },
                                      "type": "text",
                                      "value": "a parameter description",
                                    }
                                  }
                                  parent={
                                    Object {
                                      "parent": Object {
                                        "type": "root",
                                      },
                                      "type": "paragraph",
                                    }
                                  }
                                  path={
                                    Array [
                                      "children",
                                      0,
                                      "children",
                                      0,
                                    ]
                                  }
                                >
                                  a parameter description
                                </N>
                              </p>
                            </paragraph>
                          </div>
                        </MarkdownViewer.Component>
                      </ErrorBoundary>
                    </MarkdownViewer>
                  </MarkdownViewer>
                  <div
                    className="flex flex-wrap"
                  >
                    <Blueprint3.Tag
                      className="mt-2 mr-2"
                      intent="warning"
                      minimal={true}
                    >
                      <span
                        className="bp3-tag bp3-intent-warning bp3-minimal mt-2 mr-2"
                      >
                        <Blueprint3.Icon />
                        <Blueprint3.Text
                          className="bp3-fill"
                          ellipsize={true}
                          tagName="span"
                        >
                          <span
                            className="bp3-text-overflow-ellipsis bp3-fill"
                          >
                            Deprecated
                          </span>
                        </Blueprint3.Text>
                        <Blueprint3.Icon />
                      </span>
                    </Blueprint3.Tag>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="explode"
                      name="explode"
                      value={true}
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              explode
                              : 
                              true
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="examples"
                      name="examples"
                      value={
                        Array [
                          Object {
                            "key": "example",
                            "value": "example value",
                          },
                        ]
                      }
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              examples
                              : 
                              {"key":"example","value":"example value"}
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                  </div>
                </div>
              </HttpOperation.Parameter>
            </div>
          </HttpOperation.Parameters>
        </div>
      </HttpOperation.Request>
      <HttpOperation.Responses
        responses={Array []}
      />
    </div>
  </HttpOperation.Component>
</HttpOperation>
`;

exports[`HttpOperation Path Parameters should render correct validations 1`] = `
<HttpOperation
  data={
    Object {
      "id": "get",
      "method": "get",
      "path": "/path",
      "request": Object {
        "path": Array [
          Object {
            "deprecated": true,
            "description": "a parameter description",
            "examples": Array [
              Object {
                "key": "example",
                "value": "example value",
              },
            ],
            "explode": true,
            "name": "parameter name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
            "style": "simple",
          },
        ],
      },
      "responses": Array [],
    }
  }
>
  <HttpOperation.Component
    data={
      Object {
        "id": "get",
        "method": "get",
        "path": "/path",
        "request": Object {
          "path": Array [
            Object {
              "deprecated": true,
              "description": "a parameter description",
              "examples": Array [
                Object {
                  "key": "example",
                  "value": "example value",
                },
              ],
              "explode": true,
              "name": "parameter name",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "simple",
            },
          ],
        },
        "responses": Array [],
      }
    }
  >
    <div
      className="HttpOperation"
    >
      <h2
        className="bp3-heading flex items-center mb-10"
      >
        <div
          className="uppercase mr-5 font-semibold border rounded py-1 px-2 text-success border-success"
        >
          get
        </div>
        <div
          className="flex-1 font-medium text-gray-6 dark:text-gray-3"
        >
          /path
        </div>
      </h2>
      <MarkdownViewer
        className="HttpOperation__Description mb-10 ml-1"
        markdown="*No description.*"
      >
        <MarkdownViewer
          className="HttpOperation__Description mb-10 ml-1"
          components={
            Object {
              "code": [Function],
            }
          }
          markdown="*No description.*"
        >
          <ErrorBoundary
            FallbackComponent={[Function]}
          >
            <MarkdownViewer.Component
              className="HttpOperation__Description mb-10 ml-1"
              components={
                Object {
                  "code": [Function],
                }
              }
              markdown="*No description.*"
            >
              <div
                className="MarkdownViewer HttpOperation__Description mb-10 ml-1"
              >
                <paragraph
                  index={0}
                  key="0"
                  node={
                    Object {
                      "children": Array [
                        Object {
                          "children": Array [
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            },
                          ],
                          "position": Position {
                            "end": Object {
                              "column": 18,
                              "line": 1,
                              "offset": 17,
                            },
                            "indent": Array [],
                            "start": Object {
                              "column": 1,
                              "line": 1,
                              "offset": 0,
                            },
                          },
                          "type": "emphasis",
                        },
                      ],
                      "position": Position {
                        "end": Object {
                          "column": 18,
                          "line": 1,
                          "offset": 17,
                        },
                        "indent": Array [],
                        "start": Object {
                          "column": 1,
                          "line": 1,
                          "offset": 0,
                        },
                      },
                      "type": "paragraph",
                    }
                  }
                  parent={
                    Object {
                      "type": "root",
                    }
                  }
                  path={
                    Array [
                      "children",
                      0,
                    ]
                  }
                >
                  <p>
                    <emphasis
                      index={0}
                      key="0"
                      node={
                        Object {
                          "children": Array [
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            },
                          ],
                          "position": Position {
                            "end": Object {
                              "column": 18,
                              "line": 1,
                              "offset": 17,
                            },
                            "indent": Array [],
                            "start": Object {
                              "column": 1,
                              "line": 1,
                              "offset": 0,
                            },
                          },
                          "type": "emphasis",
                        }
                      }
                      parent={
                        Object {
                          "parent": Object {
                            "type": "root",
                          },
                          "type": "paragraph",
                        }
                      }
                      path={
                        Array [
                          "children",
                          0,
                          "children",
                          0,
                        ]
                      }
                    >
                      <em>
                        <N
                          index={0}
                          key="0"
                          node={
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            }
                          }
                          parent={
                            Object {
                              "parent": Object {
                                "parent": Object {
                                  "type": "root",
                                },
                                "type": "paragraph",
                              },
                              "type": "emphasis",
                            }
                          }
                          path={
                            Array [
                              "children",
                              0,
                              "children",
                              0,
                              "children",
                              0,
                            ]
                          }
                        >
                          No description.
                        </N>
                      </em>
                    </emphasis>
                  </p>
                </paragraph>
              </div>
            </MarkdownViewer.Component>
          </ErrorBoundary>
        </MarkdownViewer>
      </MarkdownViewer>
      <HttpOperation.Request
        request={
          Object {
            "path": Array [
              Object {
                "deprecated": true,
                "description": "a parameter description",
                "examples": Array [
                  Object {
                    "key": "example",
                    "value": "example value",
                  },
                ],
                "explode": true,
                "name": "parameter name",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "simple",
              },
            ],
          }
        }
      >
        <div
          className="HttpOperation__Request"
        >
          <HttpSecuritySchemes
            className="mb-10"
            securities={Array []}
            title="Authorization"
          />
          <HttpOperation.Parameters
            className="mb-10"
            parameters={
              Array [
                Object {
                  "deprecated": true,
                  "description": "a parameter description",
                  "examples": Array [
                    Object {
                      "key": "example",
                      "value": "example value",
                    },
                  ],
                  "explode": true,
                  "name": "parameter name",
                  "required": true,
                  "schema": Object {
                    "type": "string",
                  },
                  "style": "simple",
                },
              ]
            }
            title="Path Parameters"
          >
            <div
              className="HttpOperation__Parameters mb-10"
            >
              <Component
                title="Path Parameters"
              >
                <div
                  className="SectionTitle pl-1 pb-3 text-lg font-medium text-gray-7 dark:text-gray-4 border-b-2 dark:border-gray-6"
                >
                  Path Parameters
                </div>
              </Component>
              <HttpOperation.Parameter
                className="pt-4"
                key="parameter name"
                parameter={
                  Object {
                    "deprecated": true,
                    "description": "a parameter description",
                    "examples": Array [
                      Object {
                        "key": "example",
                        "value": "example value",
                      },
                    ],
                    "explode": true,
                    "name": "parameter name",
                    "required": true,
                    "schema": Object {
                      "type": "string",
                    },
                    "style": "simple",
                  }
                }
              >
                <div
                  className="HttpOperation__Parameter pl-1 pt-4"
                >
                  <div
                    className="flex items-center"
                  >
                    <div
                      className="font-medium font-mono"
                    >
                      parameter name
                    </div>
                    <div
                      className="ml-2 text-sm"
                    >
                      string
                    </div>
                    <div
                      className="ml-2 text-sm text-danger"
                    >
                      required
                    </div>
                  </div>
                  <MarkdownViewer
                    className="text-gray-7 dark:text-gray-4 mt-1"
                    markdown="a parameter description"
                  >
                    <MarkdownViewer
                      className="text-gray-7 dark:text-gray-4 mt-1"
                      components={
                        Object {
                          "code": [Function],
                        }
                      }
                      markdown="a parameter description"
                    >
                      <ErrorBoundary
                        FallbackComponent={[Function]}
                      >
                        <MarkdownViewer.Component
                          className="text-gray-7 dark:text-gray-4 mt-1"
                          components={
                            Object {
                              "code": [Function],
                            }
                          }
                          markdown="a parameter description"
                        >
                          <div
                            className="MarkdownViewer text-gray-7 dark:text-gray-4 mt-1"
                          >
                            <paragraph
                              index={0}
                              key="0"
                              node={
                                Object {
                                  "children": Array [
                                    Object {
                                      "position": Position {
                                        "end": Object {
                                          "column": 24,
                                          "line": 1,
                                          "offset": 23,
                                        },
                                        "indent": Array [],
                                        "start": Object {
                                          "column": 1,
                                          "line": 1,
                                          "offset": 0,
                                        },
                                      },
                                      "type": "text",
                                      "value": "a parameter description",
                                    },
                                  ],
                                  "position": Position {
                                    "end": Object {
                                      "column": 24,
                                      "line": 1,
                                      "offset": 23,
                                    },
                                    "indent": Array [],
                                    "start": Object {
                                      "column": 1,
                                      "line": 1,
                                      "offset": 0,
                                    },
                                  },
                                  "type": "paragraph",
                                }
                              }
                              parent={
                                Object {
                                  "type": "root",
                                }
                              }
                              path={
                                Array [
                                  "children",
                                  0,
                                ]
                              }
                            >
                              <p>
                                <N
                                  index={0}
                                  key="0"
                                  node={
                                    Object {
                                      "position": Position {
                                        "end": Object {
                                          "column": 24,
                                          "line": 1,
                                          "offset": 23,
                                        },
                                        "indent": Array [],
                                        "start": Object {
                                          "column": 1,
                                          "line": 1,
                                          "offset": 0,
                                        },
                                      },
                                      "type": "text",
                                      "value": "a parameter description",
                                    }
                                  }
                                  parent={
                                    Object {
                                      "parent": Object {
                                        "type": "root",
                                      },
                                      "type": "paragraph",
                                    }
                                  }
                                  path={
                                    Array [
                                      "children",
                                      0,
                                      "children",
                                      0,
                                    ]
                                  }
                                >
                                  a parameter description
                                </N>
                              </p>
                            </paragraph>
                          </div>
                        </MarkdownViewer.Component>
                      </ErrorBoundary>
                    </MarkdownViewer>
                  </MarkdownViewer>
                  <div
                    className="flex flex-wrap"
                  >
                    <Blueprint3.Tag
                      className="mt-2 mr-2"
                      intent="warning"
                      minimal={true}
                    >
                      <span
                        className="bp3-tag bp3-intent-warning bp3-minimal mt-2 mr-2"
                      >
                        <Blueprint3.Icon />
                        <Blueprint3.Text
                          className="bp3-fill"
                          ellipsize={true}
                          tagName="span"
                        >
                          <span
                            className="bp3-text-overflow-ellipsis bp3-fill"
                          >
                            Deprecated
                          </span>
                        </Blueprint3.Text>
                        <Blueprint3.Icon />
                      </span>
                    </Blueprint3.Tag>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="explode"
                      name="explode"
                      value={true}
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              explode
                              : 
                              true
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="examples"
                      name="examples"
                      value={
                        Array [
                          Object {
                            "key": "example",
                            "value": "example value",
                          },
                        ]
                      }
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              examples
                              : 
                              {"key":"example","value":"example value"}
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                  </div>
                </div>
              </HttpOperation.Parameter>
            </div>
          </HttpOperation.Parameters>
          <HttpOperation.Parameters
            className="mb-10"
            title="Query Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Cookie Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Header Parameters"
          />
        </div>
      </HttpOperation.Request>
      <HttpOperation.Responses
        responses={Array []}
      />
    </div>
  </HttpOperation.Component>
</HttpOperation>
`;

exports[`HttpOperation Query Parameters should render correct validations 1`] = `
<HttpOperation
  data={
    Object {
      "id": "get",
      "method": "get",
      "path": "/path",
      "request": Object {
        "query": Array [
          Object {
            "allowEmptyValue": true,
            "allowReserved": true,
            "deprecated": true,
            "description": "a parameter description",
            "examples": Array [
              Object {
                "key": "example",
                "value": "example value",
              },
            ],
            "explode": true,
            "name": "parameter name",
            "required": true,
            "schema": Object {
              "type": "string",
            },
            "style": "form",
          },
        ],
      },
      "responses": Array [],
    }
  }
>
  <HttpOperation.Component
    data={
      Object {
        "id": "get",
        "method": "get",
        "path": "/path",
        "request": Object {
          "query": Array [
            Object {
              "allowEmptyValue": true,
              "allowReserved": true,
              "deprecated": true,
              "description": "a parameter description",
              "examples": Array [
                Object {
                  "key": "example",
                  "value": "example value",
                },
              ],
              "explode": true,
              "name": "parameter name",
              "required": true,
              "schema": Object {
                "type": "string",
              },
              "style": "form",
            },
          ],
        },
        "responses": Array [],
      }
    }
  >
    <div
      className="HttpOperation"
    >
      <h2
        className="bp3-heading flex items-center mb-10"
      >
        <div
          className="uppercase mr-5 font-semibold border rounded py-1 px-2 text-success border-success"
        >
          get
        </div>
        <div
          className="flex-1 font-medium text-gray-6 dark:text-gray-3"
        >
          /path
        </div>
      </h2>
      <MarkdownViewer
        className="HttpOperation__Description mb-10 ml-1"
        markdown="*No description.*"
      >
        <MarkdownViewer
          className="HttpOperation__Description mb-10 ml-1"
          components={
            Object {
              "code": [Function],
            }
          }
          markdown="*No description.*"
        >
          <ErrorBoundary
            FallbackComponent={[Function]}
          >
            <MarkdownViewer.Component
              className="HttpOperation__Description mb-10 ml-1"
              components={
                Object {
                  "code": [Function],
                }
              }
              markdown="*No description.*"
            >
              <div
                className="MarkdownViewer HttpOperation__Description mb-10 ml-1"
              >
                <paragraph
                  index={0}
                  key="0"
                  node={
                    Object {
                      "children": Array [
                        Object {
                          "children": Array [
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            },
                          ],
                          "position": Position {
                            "end": Object {
                              "column": 18,
                              "line": 1,
                              "offset": 17,
                            },
                            "indent": Array [],
                            "start": Object {
                              "column": 1,
                              "line": 1,
                              "offset": 0,
                            },
                          },
                          "type": "emphasis",
                        },
                      ],
                      "position": Position {
                        "end": Object {
                          "column": 18,
                          "line": 1,
                          "offset": 17,
                        },
                        "indent": Array [],
                        "start": Object {
                          "column": 1,
                          "line": 1,
                          "offset": 0,
                        },
                      },
                      "type": "paragraph",
                    }
                  }
                  parent={
                    Object {
                      "type": "root",
                    }
                  }
                  path={
                    Array [
                      "children",
                      0,
                    ]
                  }
                >
                  <p>
                    <emphasis
                      index={0}
                      key="0"
                      node={
                        Object {
                          "children": Array [
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            },
                          ],
                          "position": Position {
                            "end": Object {
                              "column": 18,
                              "line": 1,
                              "offset": 17,
                            },
                            "indent": Array [],
                            "start": Object {
                              "column": 1,
                              "line": 1,
                              "offset": 0,
                            },
                          },
                          "type": "emphasis",
                        }
                      }
                      parent={
                        Object {
                          "parent": Object {
                            "type": "root",
                          },
                          "type": "paragraph",
                        }
                      }
                      path={
                        Array [
                          "children",
                          0,
                          "children",
                          0,
                        ]
                      }
                    >
                      <em>
                        <N
                          index={0}
                          key="0"
                          node={
                            Object {
                              "position": Position {
                                "end": Object {
                                  "column": 17,
                                  "line": 1,
                                  "offset": 16,
                                },
                                "indent": Array [],
                                "start": Object {
                                  "column": 2,
                                  "line": 1,
                                  "offset": 1,
                                },
                              },
                              "type": "text",
                              "value": "No description.",
                            }
                          }
                          parent={
                            Object {
                              "parent": Object {
                                "parent": Object {
                                  "type": "root",
                                },
                                "type": "paragraph",
                              },
                              "type": "emphasis",
                            }
                          }
                          path={
                            Array [
                              "children",
                              0,
                              "children",
                              0,
                              "children",
                              0,
                            ]
                          }
                        >
                          No description.
                        </N>
                      </em>
                    </emphasis>
                  </p>
                </paragraph>
              </div>
            </MarkdownViewer.Component>
          </ErrorBoundary>
        </MarkdownViewer>
      </MarkdownViewer>
      <HttpOperation.Request
        request={
          Object {
            "query": Array [
              Object {
                "allowEmptyValue": true,
                "allowReserved": true,
                "deprecated": true,
                "description": "a parameter description",
                "examples": Array [
                  Object {
                    "key": "example",
                    "value": "example value",
                  },
                ],
                "explode": true,
                "name": "parameter name",
                "required": true,
                "schema": Object {
                  "type": "string",
                },
                "style": "form",
              },
            ],
          }
        }
      >
        <div
          className="HttpOperation__Request"
        >
          <HttpSecuritySchemes
            className="mb-10"
            securities={Array []}
            title="Authorization"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Path Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            parameters={
              Array [
                Object {
                  "allowEmptyValue": true,
                  "allowReserved": true,
                  "deprecated": true,
                  "description": "a parameter description",
                  "examples": Array [
                    Object {
                      "key": "example",
                      "value": "example value",
                    },
                  ],
                  "explode": true,
                  "name": "parameter name",
                  "required": true,
                  "schema": Object {
                    "type": "string",
                  },
                  "style": "form",
                },
              ]
            }
            title="Query Parameters"
          >
            <div
              className="HttpOperation__Parameters mb-10"
            >
              <Component
                title="Query Parameters"
              >
                <div
                  className="SectionTitle pl-1 pb-3 text-lg font-medium text-gray-7 dark:text-gray-4 border-b-2 dark:border-gray-6"
                >
                  Query Parameters
                </div>
              </Component>
              <HttpOperation.Parameter
                className="pt-4"
                key="parameter name"
                parameter={
                  Object {
                    "allowEmptyValue": true,
                    "allowReserved": true,
                    "deprecated": true,
                    "description": "a parameter description",
                    "examples": Array [
                      Object {
                        "key": "example",
                        "value": "example value",
                      },
                    ],
                    "explode": true,
                    "name": "parameter name",
                    "required": true,
                    "schema": Object {
                      "type": "string",
                    },
                    "style": "form",
                  }
                }
              >
                <div
                  className="HttpOperation__Parameter pl-1 pt-4"
                >
                  <div
                    className="flex items-center"
                  >
                    <div
                      className="font-medium font-mono"
                    >
                      parameter name
                    </div>
                    <div
                      className="ml-2 text-sm"
                    >
                      string
                    </div>
                    <div
                      className="ml-2 text-sm text-danger"
                    >
                      required
                    </div>
                  </div>
                  <MarkdownViewer
                    className="text-gray-7 dark:text-gray-4 mt-1"
                    markdown="a parameter description"
                  >
                    <MarkdownViewer
                      className="text-gray-7 dark:text-gray-4 mt-1"
                      components={
                        Object {
                          "code": [Function],
                        }
                      }
                      markdown="a parameter description"
                    >
                      <ErrorBoundary
                        FallbackComponent={[Function]}
                      >
                        <MarkdownViewer.Component
                          className="text-gray-7 dark:text-gray-4 mt-1"
                          components={
                            Object {
                              "code": [Function],
                            }
                          }
                          markdown="a parameter description"
                        >
                          <div
                            className="MarkdownViewer text-gray-7 dark:text-gray-4 mt-1"
                          >
                            <paragraph
                              index={0}
                              key="0"
                              node={
                                Object {
                                  "children": Array [
                                    Object {
                                      "position": Position {
                                        "end": Object {
                                          "column": 24,
                                          "line": 1,
                                          "offset": 23,
                                        },
                                        "indent": Array [],
                                        "start": Object {
                                          "column": 1,
                                          "line": 1,
                                          "offset": 0,
                                        },
                                      },
                                      "type": "text",
                                      "value": "a parameter description",
                                    },
                                  ],
                                  "position": Position {
                                    "end": Object {
                                      "column": 24,
                                      "line": 1,
                                      "offset": 23,
                                    },
                                    "indent": Array [],
                                    "start": Object {
                                      "column": 1,
                                      "line": 1,
                                      "offset": 0,
                                    },
                                  },
                                  "type": "paragraph",
                                }
                              }
                              parent={
                                Object {
                                  "type": "root",
                                }
                              }
                              path={
                                Array [
                                  "children",
                                  0,
                                ]
                              }
                            >
                              <p>
                                <N
                                  index={0}
                                  key="0"
                                  node={
                                    Object {
                                      "position": Position {
                                        "end": Object {
                                          "column": 24,
                                          "line": 1,
                                          "offset": 23,
                                        },
                                        "indent": Array [],
                                        "start": Object {
                                          "column": 1,
                                          "line": 1,
                                          "offset": 0,
                                        },
                                      },
                                      "type": "text",
                                      "value": "a parameter description",
                                    }
                                  }
                                  parent={
                                    Object {
                                      "parent": Object {
                                        "type": "root",
                                      },
                                      "type": "paragraph",
                                    }
                                  }
                                  path={
                                    Array [
                                      "children",
                                      0,
                                      "children",
                                      0,
                                    ]
                                  }
                                >
                                  a parameter description
                                </N>
                              </p>
                            </paragraph>
                          </div>
                        </MarkdownViewer.Component>
                      </ErrorBoundary>
                    </MarkdownViewer>
                  </MarkdownViewer>
                  <div
                    className="flex flex-wrap"
                  >
                    <Blueprint3.Tag
                      className="mt-2 mr-2"
                      intent="warning"
                      minimal={true}
                    >
                      <span
                        className="bp3-tag bp3-intent-warning bp3-minimal mt-2 mr-2"
                      >
                        <Blueprint3.Icon />
                        <Blueprint3.Text
                          className="bp3-fill"
                          ellipsize={true}
                          tagName="span"
                        >
                          <span
                            className="bp3-text-overflow-ellipsis bp3-fill"
                          >
                            Deprecated
                          </span>
                        </Blueprint3.Text>
                        <Blueprint3.Icon />
                      </span>
                    </Blueprint3.Tag>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="allowEmptyValue"
                      name="allowEmptyValue"
                      value={true}
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              allowEmptyValue
                              : 
                              true
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="allowReserved"
                      name="allowReserved"
                      value={true}
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              allowReserved
                              : 
                              true
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="explode"
                      name="explode"
                      value={true}
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              explode
                              : 
                              true
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                    <ParameterValidation
                      className="mt-2 mr-2"
                      key="examples"
                      name="examples"
                      value={
                        Array [
                          Object {
                            "key": "example",
                            "value": "example value",
                          },
                        ]
                      }
                    >
                      <Blueprint3.Tag
                        className="mt-2 mr-2"
                        minimal={true}
                      >
                        <span
                          className="bp3-tag bp3-minimal mt-2 mr-2"
                        >
                          <Blueprint3.Icon />
                          <Blueprint3.Text
                            className="bp3-fill"
                            ellipsize={true}
                            tagName="span"
                          >
                            <span
                              className="bp3-text-overflow-ellipsis bp3-fill"
                            >
                              examples
                              : 
                              {"value":"example value","key":"example"}
                            </span>
                          </Blueprint3.Text>
                          <Blueprint3.Icon />
                        </span>
                      </Blueprint3.Tag>
                    </ParameterValidation>
                  </div>
                </div>
              </HttpOperation.Parameter>
            </div>
          </HttpOperation.Parameters>
          <HttpOperation.Parameters
            className="mb-10"
            title="Cookie Parameters"
          />
          <HttpOperation.Parameters
            className="mb-10"
            title="Header Parameters"
          />
        </div>
      </HttpOperation.Request>
      <HttpOperation.Responses
        responses={Array []}
      />
    </div>
  </HttpOperation.Component>
</HttpOperation>
`;
